{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\My Assignments\\\\ESG\\\\esg-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ESGChart from './ESGChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [company, setCompany] = useState('');\n  const [file, setFile] = useState(null);\n  const [esgData, setEsgData] = useState(null);\n  const [error, setError] = useState('');\n  const [uploadedData, setUploadedData] = useState(null);\n  const [query, setQuery] = useState('');\n  const [llmResponse, setLlmResponse] = useState('');\n  const handleSearch = async () => {\n    setError('');\n    try {\n      const response = await axios.get(`http://localhost:5000/api/company/${company}`);\n      setEsgData(response.data[0]);\n    } catch (err) {\n      setError('Error fetching data');\n      setEsgData(null);\n    }\n  };\n  const handleFileUpload = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleFileSubmit = async fileType => {\n    if (!file) return alert('Please upload a file first!');\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const endpoint = fileType === 'csv' ? 'import/csv' : 'import/pdf';\n      const response = await axios.post(`http://localhost:5000/api/${endpoint}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setUploadedData(response.data.data);\n      setEsgData(null);\n    } catch (err) {\n      setError('Error importing file');\n      setUploadedData(null);\n    }\n  };\n  const handleNaturalLanguageQuery = async () => {\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:5000/api/query', {\n        query\n      });\n      setLlmResponse(response.data.answer);\n    } catch (err) {\n      setError('Error querying the LLM');\n    }\n  };\n  const handleExportCSV = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/export/csv', {\n        data: esgData || uploadedData\n      }, {\n        responseType: 'blob' // Important for file download\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'esg-data.csv');\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      setError('Error exporting CSV');\n    }\n  };\n  const handleExportPDF = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/export/pdf', {\n        data: esgData || uploadedData\n      }, {\n        responseType: 'blob' // Important for file download\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'esg-report.pdf');\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      setError('Error exporting PDF');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ESG Data Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Company Name\",\n      value: company,\n      onChange: e => setCompany(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search ESG Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload ESG Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleFileSubmit('csv'),\n      children: \"Upload CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleFileSubmit('pdf'),\n      children: \"Upload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), uploadedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportCSV,\n        children: \"Download CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportPDF,\n        children: \"Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Natural Language Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ask something...\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNaturalLanguageQuery,\n      children: \"Ask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this), llmResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response\",\n      children: llmResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }, this), (esgData || uploadedData) && /*#__PURE__*/_jsxDEV(ESGChart, {\n      data: esgData || uploadedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dLitf7SDKXjoBw9n9uPFQ6e26P4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","ESGChart","jsxDEV","_jsxDEV","App","_s","company","setCompany","file","setFile","esgData","setEsgData","error","setError","uploadedData","setUploadedData","query","setQuery","llmResponse","setLlmResponse","handleSearch","response","get","data","err","handleFileUpload","e","target","files","handleFileSubmit","fileType","alert","formData","FormData","append","endpoint","post","headers","handleNaturalLanguageQuery","answer","handleExportCSV","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","handleExportPDF","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","onClick","accept","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/My Assignments/ESG/esg-dashboard/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ESGChart from './ESGChart';\n\nfunction App() {\n  const [company, setCompany] = useState('');\n  const [file, setFile] = useState(null);\n  const [esgData, setEsgData] = useState(null);\n  const [error, setError] = useState('');\n  const [uploadedData, setUploadedData] = useState(null);\n  const [query, setQuery] = useState('');\n  const [llmResponse, setLlmResponse] = useState('');\n\n  const handleSearch = async () => {\n    setError('');\n    try {\n      const response = await axios.get(`http://localhost:5000/api/company/${company}`);\n      setEsgData(response.data[0]);\n    } catch (err) {\n      setError('Error fetching data');\n      setEsgData(null);\n    }\n  };\n\n  const handleFileUpload = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleFileSubmit = async (fileType) => {\n    if (!file) return alert('Please upload a file first!');\n    \n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const endpoint = fileType === 'csv' ? 'import/csv' : 'import/pdf';\n      const response = await axios.post(`http://localhost:5000/api/${endpoint}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      setUploadedData(response.data.data);\n      setEsgData(null);\n    } catch (err) {\n      setError('Error importing file');\n      setUploadedData(null);\n    }\n  };\n\n  const handleNaturalLanguageQuery = async () => {\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:5000/api/query', { query });\n      setLlmResponse(response.data.answer);\n    } catch (err) {\n      setError('Error querying the LLM');\n    }\n  };\n\n  const handleExportCSV = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/export/csv', {\n        data: esgData || uploadedData,\n      }, {\n        responseType: 'blob', // Important for file download\n      });\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'esg-data.csv');\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      setError('Error exporting CSV');\n    }\n  };\n\n  const handleExportPDF = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/export/pdf', {\n        data: esgData || uploadedData,\n      }, {\n        responseType: 'blob', // Important for file download\n      });\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'esg-report.pdf');\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      setError('Error exporting PDF');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>ESG Data Dashboard</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Company Name\"\n        value={company}\n        onChange={(e) => setCompany(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search ESG Data</button>\n\n      <h2>Upload ESG Data</h2>\n      <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\n      <button onClick={() => handleFileSubmit('csv')}>Upload CSV</button>\n      <input type=\"file\" accept=\".pdf\" onChange={handleFileUpload} />\n      <button onClick={() => handleFileSubmit('pdf')}>Upload PDF</button>\n\n      {uploadedData && (\n        <div>\n          <button onClick={handleExportCSV}>Download CSV</button>\n          <button onClick={handleExportPDF}>Download PDF</button>\n        </div>\n      )}\n\n      <h2>Natural Language Query</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Ask something...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      <button onClick={handleNaturalLanguageQuery}>Ask</button>\n\n      {error && <div className=\"error\">{error}</div>}\n      {llmResponse && <div className=\"response\">{llmResponse}</div>}\n      \n      {(esgData || uploadedData) && (\n        <ESGChart data={esgData || uploadedData} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}