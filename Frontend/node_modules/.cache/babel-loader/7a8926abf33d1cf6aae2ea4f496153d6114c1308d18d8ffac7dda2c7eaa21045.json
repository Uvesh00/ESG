{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\My Assignments\\\\ESG\\\\esg-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ESGChart from './ESGChart';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [company, setCompany] = useState('');\n  const [file, setFile] = useState(null);\n  const [esgData, setEsgData] = useState(null);\n  const [error, setError] = useState('');\n  const [uploadedData, setUploadedData] = useState(null);\n  const [query, setQuery] = useState(''); // State for natural language query\n  const [llmResponse, setLlmResponse] = useState(''); // State for LLM response\n\n  const handleSearch = async () => {\n    setError(''); // Clear previous errors\n    try {\n      const response = await axios.get(`http://localhost:5000/api/company/${company}`);\n      setEsgData(response.data); // Use response.data directly\n      setUploadedData(null); // Clear uploaded data when fetching new data\n    } catch (err) {\n      setError('Error fetching data');\n      setEsgData(null);\n    }\n  };\n  const handleFileUpload = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleFileSubmit = async fileType => {\n    if (!file) return alert('Please upload a file first!');\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const endpoint = fileType === 'csv' ? 'import/csv' : 'import/pdf';\n      const response = await axios.post(`http://localhost:5000/api/${endpoint}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setUploadedData(response.data.data);\n      setEsgData(null); // Clear existing data when uploading new data\n    } catch (err) {\n      setError('Error importing file');\n      setUploadedData(null);\n    }\n  };\n  const handleNaturalLanguageQuery = async () => {\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:5000/api/query', {\n        query\n      });\n      setLlmResponse(response.data.answer);\n    } catch (err) {\n      setError('Error querying the LLM');\n    }\n  };\n  const handleExportCSV = async () => {\n    if (!esgData) return alert('No ESG data available for export!');\n    const response = await axios.post('http://localhost:5000/api/export/csv', {\n      data: esgData\n    }, {\n      responseType: 'blob'\n    });\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'esg-data.csv');\n    document.body.appendChild(link);\n    link.click();\n  };\n  const handleExportPDF = async () => {\n    if (!esgData) return alert('No ESG data available for export!');\n    const response = await axios.post('http://localhost:5000/api/export/pdf', {\n      data: esgData\n    }, {\n      responseType: 'blob'\n    });\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'esg-report.pdf');\n    document.body.appendChild(link);\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ESG Data Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Company Name\",\n      value: company,\n      onChange: e => setCompany(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search ESG Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload ESG Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleFileSubmit('csv'),\n      children: \"Upload CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleFileSubmit('pdf'),\n      children: \"Upload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Natural Language Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ask something...\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNaturalLanguageQuery,\n      children: \"Ask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }, this), llmResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response\",\n      children: llmResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }, this), (esgData || uploadedData) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ESGChart, {\n        data: esgData || uploadedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportCSV,\n        children: \"Download CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportPDF,\n        children: \"Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"dLitf7SDKXjoBw9n9uPFQ6e26P4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","ESGChart","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","company","setCompany","file","setFile","esgData","setEsgData","error","setError","uploadedData","setUploadedData","query","setQuery","llmResponse","setLlmResponse","handleSearch","response","get","data","err","handleFileUpload","e","target","files","handleFileSubmit","fileType","alert","formData","FormData","append","endpoint","post","headers","handleNaturalLanguageQuery","answer","handleExportCSV","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","handleExportPDF","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","onClick","accept","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/My Assignments/ESG/esg-dashboard/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ESGChart from './ESGChart';\n\nfunction App() {\n    const [company, setCompany] = useState('');\n    const [file, setFile] = useState(null);\n    const [esgData, setEsgData] = useState(null);\n    const [error, setError] = useState('');\n    const [uploadedData, setUploadedData] = useState(null);\n    const [query, setQuery] = useState(''); // State for natural language query\n    const [llmResponse, setLlmResponse] = useState(''); // State for LLM response\n\n    const handleSearch = async () => {\n        setError(''); // Clear previous errors\n        try {\n            const response = await axios.get(`http://localhost:5000/api/company/${company}`);\n            setEsgData(response.data); // Use response.data directly\n            setUploadedData(null); // Clear uploaded data when fetching new data\n        } catch (err) {\n            setError('Error fetching data');\n            setEsgData(null);\n        }\n    };\n\n    const handleFileUpload = (e) => {\n        setFile(e.target.files[0]);\n    };\n\n    const handleFileSubmit = async (fileType) => {\n        if (!file) return alert('Please upload a file first!');\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        try {\n            const endpoint = fileType === 'csv' ? 'import/csv' : 'import/pdf';\n            const response = await axios.post(`http://localhost:5000/api/${endpoint}`, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            setUploadedData(response.data.data);\n            setEsgData(null); // Clear existing data when uploading new data\n        } catch (err) {\n            setError('Error importing file');\n            setUploadedData(null);\n        }\n    };\n\n    const handleNaturalLanguageQuery = async () => {\n        setError('');\n        try {\n            const response = await axios.post('http://localhost:5000/api/query', { query });\n            setLlmResponse(response.data.answer);\n        } catch (err) {\n            setError('Error querying the LLM');\n        }\n    };\n\n    const handleExportCSV = async () => {\n        if (!esgData) return alert('No ESG data available for export!');\n\n        const response = await axios.post('http://localhost:5000/api/export/csv', { data: esgData }, {\n            responseType: 'blob',\n        });\n\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'esg-data.csv');\n        document.body.appendChild(link);\n        link.click();\n    };\n\n    const handleExportPDF = async () => {\n        if (!esgData) return alert('No ESG data available for export!');\n\n        const response = await axios.post('http://localhost:5000/api/export/pdf', { data: esgData }, {\n            responseType: 'blob',\n        });\n\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'esg-report.pdf');\n        document.body.appendChild(link);\n        link.click();\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>ESG Data Dashboard</h1>\n            <input\n                type=\"text\"\n                placeholder=\"Company Name\"\n                value={company}\n                onChange={(e) => setCompany(e.target.value)}\n            />\n            <button onClick={handleSearch}>Search ESG Data</button>\n\n            <h2>Upload ESG Data</h2>\n            <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\n            <button onClick={() => handleFileSubmit('csv')}>Upload CSV</button>\n            <input type=\"file\" accept=\".pdf\" onChange={handleFileUpload} />\n            <button onClick={() => handleFileSubmit('pdf')}>Upload PDF</button>\n\n            <h2>Natural Language Query</h2>\n            <input\n                type=\"text\"\n                placeholder=\"Ask something...\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n            />\n            <button onClick={handleNaturalLanguageQuery}>Ask</button>\n\n            {error && <div className=\"error\">{error}</div>}\n            {llmResponse && <div className=\"response\">{llmResponse}</div>}\n            \n            {(esgData || uploadedData) && (\n                <>\n                    <ESGChart data={esgData || uploadedData} />\n                    <button onClick={handleExportCSV}>Download CSV</button>\n                    <button onClick={handleExportPDF}>Download PDF</button>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}