{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\My Assignments\\\\ESG\\\\esg-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // For API calls\nimport { Line } from 'react-chartjs-2'; // For charting\nimport 'chart.js/auto'; // Chart.js setup\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [esgData, setEsgData] = useState([]);\n  const [selectedMetric, setSelectedMetric] = useState('environmental');\n  const [companyName, setCompanyName] = useState('Apple Inc.'); // Default company\n\n  // Fetch ESG data from the backend when company changes\n  useEffect(() => {\n    axios.get(`/api/esg-data?companyname=${companyName}`).then(response => {\n      setEsgData(response.data.scores); // Assuming 'scores' contains the ESG data\n    }).catch(error => {\n      console.error('Error fetching ESG data:', error);\n    });\n  }, [companyName]);\n\n  // Chart.js setup\n  const data = {\n    labels: esgData.map(item => item.date),\n    // Assuming the API returns dates\n    datasets: [{\n      label: selectedMetric,\n      data: esgData.map(item => item[selectedMetric]),\n      // Assuming the API returns specific metrics\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ESG Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Company: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: companyName,\n        onChange: e => setCompanyName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Metric: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedMetric(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"environmental\",\n          children: \"Environmental\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"social\",\n          children: \"Social\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"governance\",\n          children: \"Governance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MAL2sduz89t8VRhBIi6CZCrK6uc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","jsxDEV","_jsxDEV","App","_s","esgData","setEsgData","selectedMetric","setSelectedMetric","companyName","setCompanyName","get","then","response","data","scores","catch","error","console","labels","map","item","date","datasets","label","fill","borderColor","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/My Assignments/ESG/esg-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';  // For API calls\nimport { Line } from 'react-chartjs-2'; // For charting\nimport 'chart.js/auto'; // Chart.js setup\n\nfunction App() {\n  const [esgData, setEsgData] = useState([]);\n  const [selectedMetric, setSelectedMetric] = useState('environmental');\n  const [companyName, setCompanyName] = useState('Apple Inc.');  // Default company\n\n  // Fetch ESG data from the backend when company changes\n  useEffect(() => {\n    axios.get(`/api/esg-data?companyname=${companyName}`)\n      .then(response => {\n        setEsgData(response.data.scores); // Assuming 'scores' contains the ESG data\n      })\n      .catch(error => {\n        console.error('Error fetching ESG data:', error);\n      });\n  }, [companyName]);\n\n  // Chart.js setup\n  const data = {\n    labels: esgData.map(item => item.date), // Assuming the API returns dates\n    datasets: [\n      {\n        label: selectedMetric,\n        data: esgData.map(item => item[selectedMetric]), // Assuming the API returns specific metrics\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>ESG Dashboard</h1>\n      \n      <div>\n        <label>Select Company: </label>\n        <input\n          type=\"text\"\n          value={companyName}\n          onChange={(e) => setCompanyName(e.target.value)}\n        />\n      </div>\n\n      <div>\n        <label>Select Metric: </label>\n        <select onChange={(e) => setSelectedMetric(e.target.value)}>\n          <option value=\"environmental\">Environmental</option>\n          <option value=\"social\">Social</option>\n          <option value=\"governance\">Governance</option>\n        </select>\n      </div>\n      \n      <div>\n        <Line data={data} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}