{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'./App.css';import ESGChart from'./ESGChart';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[company,setCompany]=useState('');const[file,setFile]=useState(null);const[esgData,setEsgData]=useState(null);const[error,setError]=useState('');const[uploadedData,setUploadedData]=useState(null);const[query,setQuery]=useState('');// State for natural language query\nconst[llmResponse,setLlmResponse]=useState('');// State for LLM response\nconst handleSearch=async()=>{setError('');// Clear previous errors\ntry{const response=await axios.get(`http://localhost:5000/api/company/${company}`);setEsgData(response.data);// Use response.data directly\nsetUploadedData(null);// Clear uploaded data when fetching new data\n}catch(err){setError('Error fetching data');setEsgData(null);}};const handleFileUpload=e=>{setFile(e.target.files[0]);};const handleFileSubmit=async fileType=>{if(!file)return alert('Please upload a file first!');const formData=new FormData();formData.append('file',file);try{const endpoint=fileType==='csv'?'import/csv':'import/pdf';const response=await axios.post(`http://localhost:5000/api/${endpoint}`,formData,{headers:{'Content-Type':'multipart/form-data'}});setUploadedData(response.data.data);setEsgData(null);// Clear existing data when uploading new data\n}catch(err){setError('Error importing file');setUploadedData(null);}};const handleNaturalLanguageQuery=async()=>{setError('');try{const response=await axios.post('http://localhost:5000/api/query',{query});setLlmResponse(response.data.answer);}catch(err){setError('Error querying the LLM');}};const handleExportCSV=async()=>{if(!esgData)return alert('No ESG data available for export!');const response=await axios.post('http://localhost:5000/api/export/csv',{data:esgData},{responseType:'blob'});const url=window.URL.createObjectURL(new Blob([response.data]));const link=document.createElement('a');link.href=url;link.setAttribute('download','esg-data.csv');document.body.appendChild(link);link.click();};const handleExportPDF=async()=>{if(!esgData)return alert('No ESG data available for export!');const response=await axios.post('http://localhost:5000/api/export/pdf',{data:esgData},{responseType:'blob'});const url=window.URL.createObjectURL(new Blob([response.data]));const link=document.createElement('a');link.href=url;link.setAttribute('download','esg-report.pdf');document.body.appendChild(link);link.click();};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"ESG Data Dashboard\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Company Name\",value:company,onChange:e=>setCompany(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,children:\"Search ESG Data\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Upload ESG Data\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",onChange:handleFileUpload}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleFileSubmit('csv'),children:\"Upload CSV\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".pdf\",onChange:handleFileUpload}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleFileSubmit('pdf'),children:\"Upload PDF\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Natural Language Query\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Ask something...\",value:query,onChange:e=>setQuery(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNaturalLanguageQuery,children:\"Ask\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),llmResponse&&/*#__PURE__*/_jsx(\"div\",{className:\"response\",children:llmResponse}),(esgData||uploadedData)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ESGChart,{data:esgData||uploadedData}),/*#__PURE__*/_jsx(\"button\",{onClick:handleExportCSV,children:\"Download CSV\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleExportPDF,children:\"Download PDF\"})]})]});}export default App;","map":{"version":3,"names":["React","useState","axios","ESGChart","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","company","setCompany","file","setFile","esgData","setEsgData","error","setError","uploadedData","setUploadedData","query","setQuery","llmResponse","setLlmResponse","handleSearch","response","get","data","err","handleFileUpload","e","target","files","handleFileSubmit","fileType","alert","formData","FormData","append","endpoint","post","headers","handleNaturalLanguageQuery","answer","handleExportCSV","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","handleExportPDF","className","children","type","placeholder","value","onChange","onClick","accept"],"sources":["C:/Users/Admin/Documents/My Assignments/Git/ESG-Git/ESG/Frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport ESGChart from './ESGChart';\r\n\r\nfunction App() {\r\n    const [company, setCompany] = useState('');\r\n    const [file, setFile] = useState(null);\r\n    const [esgData, setEsgData] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [uploadedData, setUploadedData] = useState(null);\r\n    const [query, setQuery] = useState(''); // State for natural language query\r\n    const [llmResponse, setLlmResponse] = useState(''); // State for LLM response\r\n\r\n    const handleSearch = async () => {\r\n        setError(''); // Clear previous errors\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/company/${company}`);\r\n            setEsgData(response.data); // Use response.data directly\r\n            setUploadedData(null); // Clear uploaded data when fetching new data\r\n        } catch (err) {\r\n            setError('Error fetching data');\r\n            setEsgData(null);\r\n        }\r\n    };\r\n\r\n    const handleFileUpload = (e) => {\r\n        setFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleFileSubmit = async (fileType) => {\r\n        if (!file) return alert('Please upload a file first!');\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const endpoint = fileType === 'csv' ? 'import/csv' : 'import/pdf';\r\n            const response = await axios.post(`http://localhost:5000/api/${endpoint}`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n\r\n            setUploadedData(response.data.data);\r\n            setEsgData(null); // Clear existing data when uploading new data\r\n        } catch (err) {\r\n            setError('Error importing file');\r\n            setUploadedData(null);\r\n        }\r\n    };\r\n\r\n    const handleNaturalLanguageQuery = async () => {\r\n        setError('');\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/query', { query });\r\n            setLlmResponse(response.data.answer);\r\n        } catch (err) {\r\n            setError('Error querying the LLM');\r\n        }\r\n    };\r\n\r\n    const handleExportCSV = async () => {\r\n        if (!esgData) return alert('No ESG data available for export!');\r\n\r\n        const response = await axios.post('http://localhost:5000/api/export/csv', { data: esgData }, {\r\n            responseType: 'blob',\r\n        });\r\n\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', 'esg-data.csv');\r\n        document.body.appendChild(link);\r\n        link.click();\r\n    };\r\n\r\n    const handleExportPDF = async () => {\r\n        if (!esgData) return alert('No ESG data available for export!');\r\n\r\n        const response = await axios.post('http://localhost:5000/api/export/pdf', { data: esgData }, {\r\n            responseType: 'blob',\r\n        });\r\n\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', 'esg-report.pdf');\r\n        document.body.appendChild(link);\r\n        link.click();\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>ESG Data Dashboard</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Company Name\"\r\n                value={company}\r\n                onChange={(e) => setCompany(e.target.value)}\r\n            />\r\n            <button onClick={handleSearch}>Search ESG Data</button>\r\n\r\n            <h2>Upload ESG Data</h2>\r\n            <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\r\n            <button onClick={() => handleFileSubmit('csv')}>Upload CSV</button>\r\n            <input type=\"file\" accept=\".pdf\" onChange={handleFileUpload} />\r\n            <button onClick={() => handleFileSubmit('pdf')}>Upload PDF</button>\r\n\r\n            <h2>Natural Language Query</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Ask something...\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n            />\r\n            <button onClick={handleNaturalLanguageQuery}>Ask</button>\r\n\r\n            {error && <div className=\"error\">{error}</div>}\r\n            {llmResponse && <div className=\"response\">{llmResponse}</div>}\r\n            \r\n            {(esgData || uploadedData) && (\r\n                <>\r\n                    <ESGChart data={esgData || uploadedData} />\r\n                    <button onClick={handleExportCSV}>Download CSV</button>\r\n                    <button onClick={handleExportPDF}>Download PDF</button>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,WAAW,CAClB,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACY,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACkB,YAAY,CAAEC,eAAe,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACoB,KAAK,CAAEC,QAAQ,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAAE;AACxC,KAAM,CAACsB,WAAW,CAAEC,cAAc,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEpD,KAAM,CAAAwB,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC7BP,QAAQ,CAAC,EAAE,CAAC,CAAE;AACd,GAAI,CACA,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAxB,KAAK,CAACyB,GAAG,CAAC,qCAAqChB,OAAO,EAAE,CAAC,CAChFK,UAAU,CAACU,QAAQ,CAACE,IAAI,CAAC,CAAE;AAC3BR,eAAe,CAAC,IAAI,CAAC,CAAE;AAC3B,CAAE,MAAOS,GAAG,CAAE,CACVX,QAAQ,CAAC,qBAAqB,CAAC,CAC/BF,UAAU,CAAC,IAAI,CAAC,CACpB,CACJ,CAAC,CAED,KAAM,CAAAc,gBAAgB,CAAIC,CAAC,EAAK,CAC5BjB,OAAO,CAACiB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC9B,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACzC,GAAI,CAACtB,IAAI,CAAE,MAAO,CAAAuB,KAAK,CAAC,6BAA6B,CAAC,CAEtD,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAE1B,IAAI,CAAC,CAE7B,GAAI,CACA,KAAM,CAAA2B,QAAQ,CAAGL,QAAQ,GAAK,KAAK,CAAG,YAAY,CAAG,YAAY,CACjE,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAxB,KAAK,CAACuC,IAAI,CAAC,6BAA6BD,QAAQ,EAAE,CAAEH,QAAQ,CAAE,CACjFK,OAAO,CAAE,CACL,cAAc,CAAE,qBACpB,CACJ,CAAC,CAAC,CAEFtB,eAAe,CAACM,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CACnCZ,UAAU,CAAC,IAAI,CAAC,CAAE;AACtB,CAAE,MAAOa,GAAG,CAAE,CACVX,QAAQ,CAAC,sBAAsB,CAAC,CAChCE,eAAe,CAAC,IAAI,CAAC,CACzB,CACJ,CAAC,CAED,KAAM,CAAAuB,0BAA0B,CAAG,KAAAA,CAAA,GAAY,CAC3CzB,QAAQ,CAAC,EAAE,CAAC,CACZ,GAAI,CACA,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAxB,KAAK,CAACuC,IAAI,CAAC,iCAAiC,CAAE,CAAEpB,KAAM,CAAC,CAAC,CAC/EG,cAAc,CAACE,QAAQ,CAACE,IAAI,CAACgB,MAAM,CAAC,CACxC,CAAE,MAAOf,GAAG,CAAE,CACVX,QAAQ,CAAC,wBAAwB,CAAC,CACtC,CACJ,CAAC,CAED,KAAM,CAAA2B,eAAe,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAAC9B,OAAO,CAAE,MAAO,CAAAqB,KAAK,CAAC,mCAAmC,CAAC,CAE/D,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAxB,KAAK,CAACuC,IAAI,CAAC,sCAAsC,CAAE,CAAEb,IAAI,CAAEb,OAAQ,CAAC,CAAE,CACzF+B,YAAY,CAAE,MAClB,CAAC,CAAC,CAEF,KAAM,CAAAC,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,GAAI,CAAAC,IAAI,CAAC,CAACzB,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CACjE,KAAM,CAAAwB,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGR,GAAG,CACfK,IAAI,CAACI,YAAY,CAAC,UAAU,CAAE,cAAc,CAAC,CAC7CH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC,CAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC,CAChB,CAAC,CAED,KAAM,CAAAC,eAAe,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAAC7C,OAAO,CAAE,MAAO,CAAAqB,KAAK,CAAC,mCAAmC,CAAC,CAE/D,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAxB,KAAK,CAACuC,IAAI,CAAC,sCAAsC,CAAE,CAAEb,IAAI,CAAEb,OAAQ,CAAC,CAAE,CACzF+B,YAAY,CAAE,MAClB,CAAC,CAAC,CAEF,KAAM,CAAAC,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,GAAI,CAAAC,IAAI,CAAC,CAACzB,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CACjE,KAAM,CAAAwB,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGR,GAAG,CACfK,IAAI,CAACI,YAAY,CAAC,UAAU,CAAE,gBAAgB,CAAC,CAC/CH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC,CAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC,CAChB,CAAC,CAED,mBACIlD,KAAA,QAAKoD,SAAS,CAAC,KAAK,CAAAC,QAAA,eAChBzD,IAAA,OAAAyD,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3BzD,IAAA,UACI0D,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,cAAc,CAC1BC,KAAK,CAAEtD,OAAQ,CACfuD,QAAQ,CAAGnC,CAAC,EAAKnB,UAAU,CAACmB,CAAC,CAACC,MAAM,CAACiC,KAAK,CAAE,CAC/C,CAAC,cACF5D,IAAA,WAAQ8D,OAAO,CAAE1C,YAAa,CAAAqC,QAAA,CAAC,iBAAe,CAAQ,CAAC,cAEvDzD,IAAA,OAAAyD,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBzD,IAAA,UAAO0D,IAAI,CAAC,MAAM,CAACK,MAAM,CAAC,MAAM,CAACF,QAAQ,CAAEpC,gBAAiB,CAAE,CAAC,cAC/DzB,IAAA,WAAQ8D,OAAO,CAAEA,CAAA,GAAMjC,gBAAgB,CAAC,KAAK,CAAE,CAAA4B,QAAA,CAAC,YAAU,CAAQ,CAAC,cACnEzD,IAAA,UAAO0D,IAAI,CAAC,MAAM,CAACK,MAAM,CAAC,MAAM,CAACF,QAAQ,CAAEpC,gBAAiB,CAAE,CAAC,cAC/DzB,IAAA,WAAQ8D,OAAO,CAAEA,CAAA,GAAMjC,gBAAgB,CAAC,KAAK,CAAE,CAAA4B,QAAA,CAAC,YAAU,CAAQ,CAAC,cAEnEzD,IAAA,OAAAyD,QAAA,CAAI,wBAAsB,CAAI,CAAC,cAC/BzD,IAAA,UACI0D,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,kBAAkB,CAC9BC,KAAK,CAAE5C,KAAM,CACb6C,QAAQ,CAAGnC,CAAC,EAAKT,QAAQ,CAACS,CAAC,CAACC,MAAM,CAACiC,KAAK,CAAE,CAC7C,CAAC,cACF5D,IAAA,WAAQ8D,OAAO,CAAExB,0BAA2B,CAAAmB,QAAA,CAAC,KAAG,CAAQ,CAAC,CAExD7C,KAAK,eAAIZ,IAAA,QAAKwD,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAE7C,KAAK,CAAM,CAAC,CAC7CM,WAAW,eAAIlB,IAAA,QAAKwD,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAEvC,WAAW,CAAM,CAAC,CAE5D,CAACR,OAAO,EAAII,YAAY,gBACrBV,KAAA,CAAAF,SAAA,EAAAuD,QAAA,eACIzD,IAAA,CAACF,QAAQ,EAACyB,IAAI,CAAEb,OAAO,EAAII,YAAa,CAAE,CAAC,cAC3Cd,IAAA,WAAQ8D,OAAO,CAAEtB,eAAgB,CAAAiB,QAAA,CAAC,cAAY,CAAQ,CAAC,cACvDzD,IAAA,WAAQ8D,OAAO,CAAEP,eAAgB,CAAAE,QAAA,CAAC,cAAY,CAAQ,CAAC,EACzD,CACL,EACA,CAAC,CAEd,CAEA,cAAe,CAAApD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}